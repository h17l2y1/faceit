"use strict";(self.webpackChunkfaceit=self.webpackChunkfaceit||[]).push([[863],{3068:(v,o,e)=>{e.d(o,{s:()=>r});var t=e(7983),n=e(1465);const u=["vega-flex-grow","vega-flex-shrink","vega-flex-grow-0","vega-flex-shrink-0","vega-flex-basis-0","v-flex-1","v-min-w-min","disabled","v-text-black","v-text-white","v-hidden","vega-loader-container-relative","vega-page-notification-fade-out"];function r(s,i){return t.F.isEnabled("VEGA_COMPONENT.SANITIZE_VEGA_COMPONENT")&&(function l(s,i){var a,d,c;const h=["hydrated"].concat((null===(d=null===(a=s.$attrs$)||void 0===a?void 0:a.class)||void 0===d?void 0:d.split(/\s+/).filter(Boolean))||[]),p=(null===(c=i.dataset.verifiedClasses)||void 0===c?void 0:c.split(" "))||[],C=new Set([...h,...p,...u]),g=Array.from(i.classList).filter(Boolean).filter(f=>{const b=f.replace(/(S|M|L|XL):/,"");return!C.has(b)}).filter(f=>!f.startsWith("ng-"));g.length&&n.L.error(`Found class(es) ${g} added to component:`,i," which is anti vega design pattern and we will forbid this behavior in the future release."," for more details, please refer to: https://heartland1.gitlab.io/vega/tiger/?path=/docs/other-best-practice--page"),"hydrated"!==h.join()&&(i.dataset.verifiedClasses=h.join(" "))}(s,i),function _(s){s.children&&Array.from(s.children).forEach(a=>{a.hasAttribute("data-shrink")&&n.L.error("Found attribute [data-shrink='0'] inside component:",s," which will be deprecated, please use classes of vega-flex-shrink, vega-flex-grow, vega-flex-shrink-0, vega-flex-grow-0, vega-flex-basis-0 instead.")})}(i)),s}},8863:(v,o,e)=>{e.r(o),e.d(o,{vega_counter_badge:()=>r});var t=e(5934),n=e(3068);e(7983);const r=class{constructor(l){(0,t.r)(this,l),this.dot=!1,this.color="bg-danger",this.count=0,this.offset=[0,0]}render(){return(0,n.s)((0,t.h)(t.H,null,(0,t.h)("div",{class:{dot:this.count>0&&this.dot,counter:this.count>0&&!this.dot,"multi-digit":this.count>=10&&!this.dot,"v-bg-danger":"bg-action"!=this.color,"v-bg-action":"bg-action"==this.color,"default-position":this.count>0},style:{right:-this.offset[0]+"px",top:`${this.offset[1]}px`}},this.renderCounter()),(0,t.h)("slot",null)),this.host)}renderCounter(){if(this.count>0&&!this.dot)return(0,t.h)("span",null,this.count>99?"99+":this.count)}get host(){return(0,t.g)(this)}}}}]);