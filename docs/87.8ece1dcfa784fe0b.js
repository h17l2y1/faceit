"use strict";(self.webpackChunkfaceit=self.webpackChunkfaceit||[]).push([[87],{3068:(_,n,s)=>{s.d(n,{s:()=>f});var e=s(7983),r=s(1465);const o=["vega-flex-grow","vega-flex-shrink","vega-flex-grow-0","vega-flex-shrink-0","vega-flex-basis-0","v-flex-1","v-min-w-min","disabled","v-text-black","v-text-white","v-hidden","vega-loader-container-relative","vega-page-notification-fade-out"];function f(a,t){return e.F.isEnabled("VEGA_COMPONENT.SANITIZE_VEGA_COMPONENT")&&(function h(a,t){var l,d,c;const v=["hydrated"].concat((null===(d=null===(l=a.$attrs$)||void 0===l?void 0:l.class)||void 0===d?void 0:d.split(/\s+/).filter(Boolean))||[]),C=(null===(c=t.dataset.verifiedClasses)||void 0===c?void 0:c.split(" "))||[],b=new Set([...v,...C,...o]),u=Array.from(t.classList).filter(Boolean).filter(g=>{const E=g.replace(/(S|M|L|XL):/,"");return!b.has(E)}).filter(g=>!g.startsWith("ng-"));u.length&&r.L.error(`Found class(es) ${u} added to component:`,t," which is anti vega design pattern and we will forbid this behavior in the future release."," for more details, please refer to: https://heartland1.gitlab.io/vega/tiger/?path=/docs/other-best-practice--page"),"hydrated"!==v.join()&&(t.dataset.verifiedClasses=v.join(" "))}(a,t),function i(a){a.children&&Array.from(a.children).forEach(l=>{l.hasAttribute("data-shrink")&&r.L.error("Found attribute [data-shrink='0'] inside component:",a," which will be deprecated, please use classes of vega-flex-shrink, vega-flex-grow, vega-flex-shrink-0, vega-flex-grow-0, vega-flex-basis-0 instead.")})}(t)),a}},8087:(_,n,s)=>{s.r(n),s.d(n,{vega_radio:()=>h});var e=s(5934),r=s(5986),o=s(3068);s(7983);const h=class{constructor(i){(0,e.r)(this,i),this.vegaFocus=(0,e.c)(this,"vegaFocus",7),this.vegaBlur=(0,e.c)(this,"vegaBlur",7),this.vegaChange=(0,e.c)(this,"vegaChange",7),this.disabled=!1,this.size="default",this.updateValue=a=>{this.checked=a.currentTarget.checked},this.handleFocus=a=>{this.vegaFocus.emit(a)},this.handleBlur=a=>{this.vegaBlur.emit(a)}}watchCheckedChange(){this.vegaChange.emit(this.checked)}connectedCallback(){this.ariaLabel=this.el.textContent,""==this.ariaLabel&&(this.ariaLabel=this.value)}componentDidLoad(){""===this.labelElement.textContent&&this.labelElement.classList.add("vega-hidden")}render(){return(0,o.s)((0,e.h)(e.H,{class:"VEGA-FLEX"==this.el.parentElement.nodeName?"vega-flex-shrink-0 v-min-w-min":""},(0,e.h)("label",{class:{"vega-radio-container":!0,[this.size]:!0,"vega-radio-checked":this.checked,"vega-radio-disabled":this.disabled}},(0,e.h)("input",{type:"radio",name:this.name,checked:this.checked,value:this.value,onFocus:this.handleFocus,onBlur:this.handleBlur,onChange:this.updateValue,"aria-label":this.ariaLabel||"No label defined",disabled:this.disabled,role:"button",tabIndex:0,onKeyDown:(0,r.c)()}),(0,e.h)("span",{class:"vega-radio-icon"},(0,e.h)("span",{class:"vega-radio-circle"})),(0,e.h)("div",{class:"vega-radio-label",ref:i=>this.labelElement=i},(0,e.h)("slot",null)))),this.el)}get el(){return(0,e.g)(this)}static get watchers(){return{checked:["watchCheckedChange"]}}}}}]);