"use strict";(self.webpackChunkfaceit=self.webpackChunkfaceit||[]).push([[5],{3068:(C,f,e)=>{e.d(f,{s:()=>E});var l=e(7983),g=e(1465);const r=["vega-flex-grow","vega-flex-shrink","vega-flex-grow-0","vega-flex-shrink-0","vega-flex-basis-0","v-flex-1","v-min-w-min","disabled","v-text-black","v-text-white","v-hidden","vega-loader-container-relative","vega-page-notification-fade-out"];function E(a,i){return l.F.isEnabled("VEGA_COMPONENT.SANITIZE_VEGA_COMPONENT")&&(function u(a,i){var o,v,d;const c=["hydrated"].concat((null===(v=null===(o=a.$attrs$)||void 0===o?void 0:o.class)||void 0===v?void 0:v.split(/\s+/).filter(Boolean))||[]),h=(null===(d=i.dataset.verifiedClasses)||void 0===d?void 0:d.split(" "))||[],s=new Set([...c,...h,...r]),t=Array.from(i.classList).filter(Boolean).filter(n=>{const _=n.replace(/(S|M|L|XL):/,"");return!s.has(_)}).filter(n=>!n.startsWith("ng-"));t.length&&g.L.error(`Found class(es) ${t} added to component:`,i," which is anti vega design pattern and we will forbid this behavior in the future release."," for more details, please refer to: https://heartland1.gitlab.io/vega/tiger/?path=/docs/other-best-practice--page"),"hydrated"!==c.join()&&(i.dataset.verifiedClasses=c.join(" "))}(a,i),function L(a){a.children&&Array.from(a.children).forEach(o=>{o.hasAttribute("data-shrink")&&g.L.error("Found attribute [data-shrink='0'] inside component:",a," which will be deprecated, please use classes of vega-flex-shrink, vega-flex-grow, vega-flex-shrink-0, vega-flex-grow-0, vega-flex-basis-0 instead.")})}(i)),a}},2005:(C,f,e)=>{e.r(f),e.d(f,{vega_card:()=>c});var l=e(5934),g=e(3068),r=e(3538),E=e(1465),u=e(4432);e(7983),e(8579),e(7607),e(9377);const d=new class v{constructor(){this.map=new Map}setNestedLevel(s,t){if(!s.matches(t))return;const n=(0,u.f)(s,t);let _=1;return n&&(_=this.map.get(n)[t]+1),this.setLevelToMap(s,t,_),_}getNestedLevel(s,t){return this.map.get(s)[t]}setLevelToMap(s,t,n){this.map.has(s)||this.map.set(s,{}),this.map.get(s)[t]=n}},c=class{constructor(h){(0,l.r)(this,h),this.backgroundColor="bg-primary",this.setAndValidNestedLevel=()=>{d.setNestedLevel(this.el,"vega-card")>2&&E.L.warn("Do not nest more than 2 level-deep vega-card, as this can create a cluttered look, especially for smaller breakpoints.",this.el)},this.getShadow=()=>d.getNestedLevel(this.el,"vega-card")>1?null:this.shadow}componentWillLoad(){this.setAndValidNestedLevel()}render(){const h=[(0,r.f)(this.padding,"padding"),(0,r.f)(this.margin,"margin"),(0,r.d)(this.backgroundColor,["dark"]),this.getShadow()&&(0,r.b)(this.getShadow(),["dark"]),(0,r.g)("12")];return(0,g.s)((0,l.h)(l.H,{class:(0,u.a)(h)},(0,l.h)("slot",null)),this.el)}get el(){return(0,l.g)(this)}}}}]);